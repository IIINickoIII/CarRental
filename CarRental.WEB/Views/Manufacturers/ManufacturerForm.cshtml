@model CarRental.WEB.ViewModels.ManufacturerViewModel
@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.ActionLink("Back", "Index", "Manufacturers")
<h2>@Model.Title</h2>
@using (Html.BeginForm("Save", "Manufacturers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "Please fix the following errors!")
    <div class="form-row">
        <span id="output">
            @if (!Model.IsNewCreated)
            {
                <img src="@Model.PictureLink" alt="no image" class="img-thumbnail" />
            }
        </span>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Picture.Upload)<br />
        @Html.TextBoxFor(m => m.Picture.Upload, htmlAttributes: new { @type = "file", @class = "form-control-file", @id = "file", @accept = "image/png" })
        @Html.ValidationMessageFor(m => m.Picture.Upload)<p></p>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Country)
        @Html.TextBoxFor(m => m.Country, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Country)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description)
    </div>
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.PictureLink)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function clearChild() {
            var span = document.getElementById('output');
            while (span.hasChildNodes()) {
                span.removeChild(span.firstChild);
            }
        }
        function handleFileSelect(evt) {
            var file = evt.target.files; // FileList object
            var f = file[0];
            if (f == null) {
                f = document.cookie.split(";").find("file");
            } else {
                document.cookie = "file=" + f;
            }
            // Only process image files.
            if (!f.type.match('image.*')) {
                alert("Image only please....");
                return;
            }
            var reader = new FileReader();
            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    // Render thumbnail.
                    var span = document.createElement('span');
                    span.innerHTML = ['<img class="img-thumbnail" title="', escape(theFile.name), '" src="', e.target.result, '" />'].join('');
                    //document.getElementById('output').insertBefore(span, null);
                    clearChild();
                    document.getElementById('output').insertBefore(span, null);
                };
            })(f);
            // Read in the image file as a data URL.
            reader.readAsDataURL(f);
        }
        document.getElementById('file').addEventListener('change', handleFileSelect, false);
    </script>
}
